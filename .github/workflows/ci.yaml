name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:

  audit:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        scan-ref: .
        trivy-config: trivy.yaml
        format: sarif
        output: trivy.sarif

    - name: Upload Sarif output
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy.sarif'

  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Validate devcontainer-feature.json files"
        uses: devcontainers/action@v1
        with:
          validate-only: "true"
          base-path-to-features: "./src"        

  test-autogenerated:
    runs-on: ubuntu-latest
    needs: [audit, validate]
    strategy:
      fail-fast: false
      matrix:
        features:
          - 1password
          - act
          - doppler
          - postgresql
          - rabbitmq-server
          - redis-server
          - snowflake-odbc
          - trivy
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    needs: [audit, validate]
    strategy:
      fail-fast: false
      matrix:
        features:
          - 1password
          - act
          - doppler
          - postgresql
          - rabbitmq-server
          - redis-server
          - snowflake-odbc
          - trivy
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated .

  test-global:
    runs-on: ubuntu-latest
    needs: [audit, validate]
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .

  release:
    runs-on: ubuntu-latest
    needs: [test-autogenerated, test-scenarios, test-global]
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
